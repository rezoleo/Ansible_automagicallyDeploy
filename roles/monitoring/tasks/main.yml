---
- name: Install snmpd
  ansible.builtin.apt:
    update_cache: true
    name: snmpd
    state: present

- name: Retrieve SNMPv3 password and passphrase from Vault
  community.hashi_vault.vault_kv2_get:
    path: infrastructure/mercure
  register: monitoring_secrets
  run_once: true
  delegate_to: localhost
  become: false

- name: Set SNMPv3 password and passphrase to facts
  ansible.builtin.set_fact:
    monitoring_snmp_authpass: "{{ monitoring_secrets.secret.snmp_authpass }}"
    monitoring_snmp_cryptopass: "{{ monitoring_secrets.secret.snmp_cryptopass }}"
    monitoring_librenms_api_token: "{{ monitoring_secrets.secret.librenms_api_token }}"
  run_once: true
  delegate_to: localhost
  become: false

- name: Gather facts using SNMP version 3
  community.general.snmp_facts:
    host: "{{ inventory_hostname }}"
    version: v3
    level: authPriv
    integrity: sha
    privacy: aes
    username: "{{ monitoring_snmp_user }}"
    authkey: "{{ monitoring_snmp_authpass }}"
    privkey: "{{ monitoring_snmp_cryptopass }}"
  ignore_errors: true
  delegate_to: localhost
  become: false
  register: snmp_facts_results

- name: Configure SNMP
  ansible.builtin.template:
    src: snmpd.conf.j2
    dest: /etc/snmp/snmpd.conf
    owner: root
    group: root
    mode: "0600"
    backup: true
  notify: Restart snmpd

# Script downloaded from https://github.com/librenms/librenms-agent/blob/master/snmp/distro
- name: Copy distro script from LibreNMS
  ansible.builtin.copy:
    src: distro
    dest: /usr/bin/distro
    owner: root
    group: root
    mode: "0755"
  notify: Restart snmpd

- name: Setup SNMP v3 user
  when: snmp_facts_results.failed

  block:
    - name: Stop SNMP service
      ansible.builtin.systemd:
        name: snmpd
        state: stopped

    - name: Remove existing SNMPv3 user(s)
      ansible.builtin.lineinfile:
        path: /var/lib/snmp/snmpd.conf
        state: absent
        regexp: ^usmUser

    - name: CreateUser in /var/lib/snmp/snmpd.conf
      ansible.builtin.lineinfile:
        path: /var/lib/snmp/snmpd.conf
        state: present
        line: createUser {{ monitoring_snmp_user }} SHA {{ monitoring_snmp_authpass }} AES {{ monitoring_snmp_cryptopass }}

- name: Start SNMP service
  ansible.builtin.systemd:
    name: snmpd
    state: started
    enabled: true

- name: Force handlers to restart snmpd for the configuration to be OK when adding in LibreNMS
  ansible.builtin.meta: flush_handlers

- name: Check if device is on LibreNMS
  delegate_to: localhost
  become: false
  ansible.builtin.uri:
    url: https://librenms.rezoleo.fr/api/v0/devices/{{ ansible_hostname }}
    method: GET
    return_content: true
    headers:
      X-Auth-Token: "{{ monitoring_librenms_api_token }}"
  register: get_device_results
  ignore_errors: true

- name: Add device to LibreNMS
  delegate_to: localhost
  become: false
  ansible.builtin.uri:
    url: https://librenms.rezoleo.fr/api/v0/devices
    method: POST
    return_content: true
    headers:
      X-Auth-Token: "{{ monitoring_librenms_api_token }}"
    body_format: json
    body:
      hostname: "{{ ansible_hostname }}"
      overwrite_ip: "{{ inventory_hostname }}"
      version: v3
      authlevel: authPriv
      authname: "{{ monitoring_snmp_user }}"
      authpass: "{{ monitoring_snmp_authpass }}"
      authalgo: SHA
      cryptopass: "{{ monitoring_snmp_cryptopass }}"
      cryptoalgo: AES
  when: get_device_results.json.status != 'ok'

- name: Change SNMP version on LibreNMS
  delegate_to: localhost
  become: false
  ansible.builtin.uri:
    url: https://librenms.rezoleo.fr/api/v0/devices/{{ ansible_hostname }}
    method: PATCH
    return_content: true
    headers:
      X-Auth-Token: "{{ monitoring_librenms_api_token }}"
    body_format: json
    body:
      field:
        - snmpver
        - authlevel
        - authname
        - authpass
        - authalgo
        - cryptopass
        - cryptoalgo
      data:
        - v3
        - authPriv
        - "{{ monitoring_snmp_user }}"
        - "{{ monitoring_snmp_authpass }}"
        - SHA
        - "{{ monitoring_snmp_cryptopass }}"
        - AES
  when: get_device_results.json.status == 'ok' and get_device_results.json.devices[0].snmpver != 'v3'
