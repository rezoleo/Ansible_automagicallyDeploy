---
# Before running this playbook, it is needed to create a database on a remote server
# as written here : https://workaround.org/ispmail-bookworm/prepare-the-database/.
# If needed allow the host in the remote server's firewall.

# Quotas are not implemented in this playbook. If one want to implement them,
# one may look at https://workaround.org/ispmail-bookworm/quotas/ for the implementation.

- name: Install essentials
  ansible.builtin.apt:
    update_cache: true
    name:
      # list available at https://workaround.org/ispmail-bookworm/install-the-software-packages/
      - postfix
      - postfix-mysql
      - apache2
      - php8.2
      - rspamd
      - redis-server
      - swaks
      - mutt
      - dovecot-mysql
      - dovecot-pop3d
      - dovecot-imapd
      - dovecot-managesieved
      - dovecot-lmtpd
      - ca-certificates
      - roundcube
      - roundcube-plugins
      - roundcube-plugins-extra
      - roundcube-mysql
      - rsyslog
    state: present

- name: Setup Apache2 and SSL
  block:
    - name: Make web root directory
      ansible.builtin.file:
        path: /var/www/{{ mail_web_server_name }}
        state: directory
        mode: '0755'
        owner: www-data
        group: www-data

    - name: Make Apache2 certificate directory
      ansible.builtin.file:
        path: "{{ mail_apache2_certificate_directory }}"
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Enable SSL module
      community.general.apache2_module:
        state: present
        name: ssl
      notify: Restart apache2

    - name: Copy http.conf
      ansible.builtin.template:
        src: http.conf.j2
        dest: /etc/apache2/sites-available/{{ mail_web_server_name }}-http.conf
        mode: '0644'
        owner: root
        group: root
      notify: Restart apache2

    - name: Enable http site
      ansible.builtin.file:
        src: /etc/apache2/sites-available/{{ mail_web_server_name }}-http.conf
        dest: /etc/apache2/sites-enabled/{{ mail_web_server_name }}-http.conf
        state: link

    - name: Copy https.conf
      ansible.builtin.template:
        src: https.conf.j2
        dest: /etc/apache2/sites-available/{{ mail_web_server_name }}-https.conf
        mode: '0644'
        owner: root
        group: root
      notify: Restart apache2

    - name: Enable https site
      ansible.builtin.file:
        src: /etc/apache2/sites-available/{{ mail_web_server_name }}-https.conf
        dest: /etc/apache2/sites-enabled/{{ mail_web_server_name }}-https.conf
        state: link

- name: Setup Postfix
  block:
    - name: Retrieve mailadmin and mailserver password from Vault
      community.hashi_vault.vault_kv2_get:
        # This secret should have the mailserver and mailadmin keys.
        # The values of these keys should be the passwords of the users of the same name used in the database.
        # example path: infrastructure/server_name
        path: "{{ mail_vault_path_to_server }}"
      register: password_secrets
      run_once: true
      delegate_to: localhost
      become: false

    - name: Copy Postfix virtual mappings
      vars:
        mail_db_mailserver_password: "{{ password_secrets.secret.mailserver }}"
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "/etc/postfix/{{ item }}"
        mode: '0640'
        owner: root
        group: postfix
      with_items:
        - mysql-virtual-mailbox-domains.cf
        - mysql-virtual-mailbox-maps.cf
        - mysql-virtual-alias-maps.cf
        - mysql-email2email.cf
      notify: Restart Postfix

    - name: Copy Postfix main configuration
      ansible.builtin.template:
        src: main.cf.j2
        dest: /etc/postfix/main.cf
        mode: '0644'
        owner: root
        group: root
      notify: Restart Postfix

    - name: Copy Postfix master configuration
      ansible.builtin.template:
        src: master.cf.j2
        dest: /etc/postfix/master.cf
        mode: '0644'
        owner: root
        group: root
      notify: Restart Postfix

- name: Setup Dovecot
  block:
    - name: Create virtual mailboxer owner group
      ansible.builtin.group:
        name: vmail
        gid: 5000
        state: present

    - name: Create virtual mailboxes owner user
      ansible.builtin.user:
        name: vmail
        uid: 5000
        group: vmail
        create_home: true
        home: /var/vmail
        state: present

    - name: Change vmail home mode
      ansible.builtin.file:
        path: /var/vmail
        state: directory
        mode: '0755'
        owner: vmail
        group: vmail

    - name: Ensure correct auth_mecanism for Outlook users
      ansible.builtin.lineinfile:
        path: "{{ mail_dovecot_conf_directory }}/10-auth.conf"
        regexp: '^auth_mechanisms\s*='
        line: 'auth_mechanisms = plain login'
        state: present
      notify: Restart Dovecot

    - name: Comment all !include lines except auth-sql.conf.ext
      ansible.builtin.replace:
        path: "{{ mail_dovecot_conf_directory }}/10-auth.conf"
        regexp: '^(?!!include auth-sql\.conf\.ext)(?<!#)!include (.+)'
        replace: '#!include \1'
      notify: Restart Dovecot

    - name: Uncomment the auth-sql.conf.ext line if necessary
      ansible.builtin.lineinfile:
        path: "{{ mail_dovecot_conf_directory }}/10-auth.conf"
        regexp: '^#?!include auth-sql\.conf\.ext'
        line: '!include auth-sql.conf.ext'
        state: present
      notify: Restart Dovecot

    - name: Ensure mail_location is set to maildir:~/Maildir
      ansible.builtin.lineinfile:
        path: "{{ mail_dovecot_conf_directory }}/10-mail.conf"
        regexp: '^#?mail_location =.*'
        line: 'mail_location = maildir:~/Maildir'
        state: present
      notify: Restart Dovecot

    - name: Ensure mail_plugins is set to quota
      ansible.builtin.lineinfile:
        path: "{{ mail_dovecot_conf_directory }}/10-mail.conf"
        regexp: '^#?mail_plugins =.*'
        line: 'mail_plugins = quota'
        state: present
      notify: Restart Dovecot

    - name: Copy 10-master.conf
      ansible.builtin.copy:
        src: 10-master.conf
        dest: "{{ mail_dovecot_conf_directory }}/10-master.conf"
        mode: '0644'
        owner: root
        group: root
      notify: Restart Dovecot

    - name: Ensure TLS encryption
      ansible.builtin.lineinfile:
        path: "{{ mail_dovecot_conf_directory }}/10-ssl.conf"
        regexp: '^ssl\s*='
        line: 'ssl = required'
        state: present
      notify: Restart Dovecot

    - name: Ensure SSL certificate is set
      ansible.builtin.lineinfile:
        path: "{{ mail_dovecot_conf_directory }}/10-ssl.conf"
        regexp: '^ssl_cert\s*='
        line: 'ssl_cert = <{{ mail_apache2_certificate_directory }}/fullchain.pem'
        state: present
      notify: Restart Dovecot

    - name: Ensure SSL key is set
      ansible.builtin.lineinfile:
        path: "{{ mail_dovecot_conf_directory }}/10-ssl.conf"
        regexp: '^ssl_key\s*='
        line: 'ssl_key = <{{ mail_apache2_certificate_directory }}/privkey.pem'
        state: present
      notify: Restart Dovecot

    - name: Copy dovecot-sql.conf.ext
      vars:
        mail_db_mailserver_password: "{{ password_secrets.secret.mailserver }}"
      ansible.builtin.template:
        src: dovecot-sql.conf.ext.j2
        dest: /etc/dovecot/dovecot-sql.conf.ext
        mode: '0600'
        owner: root
        group: root
      notify: Restart Dovecot

    - name: Ensure sieve plugin for LMTP
      ansible.builtin.lineinfile:
        path: "{{ mail_dovecot_conf_directory }}/20-lmtp.conf"
        regexp: '^\s*?#?mail_plugins\s*='
        line: '  mail_plugins = $mail_plugins sieve'
      notify: Restart Dovecot

- name: Configure Roundcube
  block:
    - name: Copy Roundcube configuration
      vars:
        mail_roundcube_des_key: "{{ password_secrets.secret.roundcube_des_key }}"
      ansible.builtin.template:
        src: config.inc.php.j2
        dest: /etc/roundcube/config.inc.php
        mode: '0644'
        owner: root
        group: root

    - name: Copy Roundcube password plugin configuration
      vars:
        mail_db_mailadmin_password: "{{ password_secrets.secret.mailadmin }}"
      ansible.builtin.template:
        src: password/config.inc.php.j2
        dest: /etc/roundcube/plugins/password/config.inc.php
        mode: '0640'
        owner: root
        group: www-data

    - name: Configure Roundcube managesieve plugin
      ansible.builtin.lineinfile:
        path: /etc/roundcube/plugins/managesieve/config.inc.php
        regexp: '^\$config'
        line: "$config['managesieve_host'] = 'localhost';"
        state: present
